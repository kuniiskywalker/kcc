#!/bin/bash
gcc -std=c11 -o lang lang.c

runTest() {
    output=$(./lang "$1" | sed -e s/^M//)
    if [ "$output" != "$2" ]; then
      echo "$1: $2 expected, but got $output"
      exit 1
    fi
    echo "$1 => $output"
}

echo '=== basic ==='
runTest 0 0
runTest 1 1
runTest 99 99

runTest '1 2 3' '1
2
3'

echo '=== + ==='
runTest '+ 1 2' 3
runTest '+ 10 2' 12

echo '=== - ==='
runTest '- 2 1' 1
runTest '- 10 200' -190

echo '=== * ==='
runTest '* 2 1' 2 
runTest '* 10 10' 100

echo '=== / ==='
# If you run it on windows mingw, '/' will be expanded in the execution path, so there is a space at the beginning.
runTest ' / 10 5' 2
runTest ' / 100 20' 5

echo '=== recursive ==='
runTest '+ 1 + 1 2' 4
runTest '+ 1 - 1 2' 0
runTest '+ 1 * 2 / 8 2' 9

echo '=== functions ==='
runTest 'F[+ . .] F(1)' 2
runTest 'F[+ . 3] F(F(1))' 7
runTest 'F[- 10 .] F(3)' 7
runTest 'F[* . .] F(3)' 9
runTest 'F[/ 9 .] F(3)' 3

echo OK
